{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/nicenicegame/Desktop/nice-workspace/bcbk2020-frontend/src/modules/register/components/RegisterForm/index.tsx\";\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useForm } from \"react-hook-form\";\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport useI18n from 'core/i18n/hooks/useI18n';\nimport { FORM_TITLE } from './locales';\nimport Text from 'common/components/Text';\nimport ContentContainer from 'common/components/ContentContainer';\nimport UserInfo from \"../UserInfo\";\nimport EventInfo from \"../EventInfo\";\nimport Covid19 from \"../Covid19\";\nimport Confirmation from \"../Confirmation\";\n// type Covid19Data = {\n//\n// }\n//\n// type EventInfoData = {\n//\n// }\nconst userInfoSchema = yup.object().shape({\n  firstName: yup.string().required('This field is required'),\n  lastName: yup.string().required('This field is required'),\n  nickname: yup.string().required('This field is required'),\n  phoneNumber: yup.string().required('This field is required'),\n  conDisease: yup.string(),\n  allergicFood: yup.string(),\n  email: yup.string().email('Invalid email address').required('This field is required')\n});\nconst covid19Schema = yup.object().shape({});\nconst eventInfoSchema = yup.object().shape({});\nconst Button = styled.button`\n    font: inherit;\n    border-radius: 3px;\n    padding: 0.5rem 1rem;\n    width: 10rem;\n    background: transparent;\n    border: 2px solid black;\n    cursor: pointer;\n    \n    \n    &:hover {\n        background: black;\n        color: white;\n    }\n    \n    @media only screen and (max-width: 768px) {\n        width: 6rem;\n        text-align: center;\n    }\n`;\nconst NextButton = styled(Button)`\n    background: pink;\n    float: right;\n    \n    &:hover {\n        background: hotpink;\n    }\n`;\nconst PreviousButton = styled(Button)`\n    visibility: ${props => props.visibility};\n`;\nconst SubmitButton = styled(Button)`\n    float: right;\n`;\nconst Form = styled.form`\n    width: 60vw;\n    border: 1px solid black;\n    padding: 1rem 2rem;\n    border-radius: 1rem;\n    \n    @media only screen and (max-width: 768px) {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n    }\n`;\nconst ButtonGroup = styled.div`\n    padding: 1rem 2rem;\n    \n    @media only screen and (max-width: 768px) {\n        display: flex;\n        justify-content: space-between;\n        padding: 1rem 1rem;\n    }\n`;\nconst Stepper = styled.div`\n    display: flex;\n    height: 3rem;\n    border: 1px solid black;\n    margin-top: 2rem;\n    justify-content: space-around;\n    align-items: center;\n    border-radius: 1rem 1rem;\n    \n    @media only screen and (max-width: 768px) {\n        font-size: 0.8rem;\n        height: 2rem;\n    }\n`;\nconst Step = styled.div`\n`;\n\nconst getSteps = () => {\n  return ['User Info', 'Covid-19', 'Event Info', 'Confirmation'];\n};\n\nconst RegisterForm = () => {\n  const I18n = useI18n();\n  const {\n    0: activeStep,\n    1: setActiveStep\n  } = useState(0);\n  const steps = getSteps(); // const { register, errors, handleSubmit } = useForm<UserInfoData>({\n  //     resolver: yupResolver(userInfoSchema)\n  // })\n\n  const userInfoForm = useForm({\n    resolver: yupResolver(userInfoSchema)\n  });\n  const covid19Form = useForm({\n    resolver: yupResolver(covid19Schema)\n  });\n  const eventInfoForm = useForm({\n    resolver: yupResolver(eventInfoSchema)\n  });\n\n  const getStepContent = stepIndex => {\n    switch (stepIndex) {\n      case 0:\n        return /*#__PURE__*/_jsxDEV(UserInfo, {\n          formProps: userInfoForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 24\n        }, this);\n\n      case 1:\n        return /*#__PURE__*/_jsxDEV(Covid19, {\n          formProps: covid19Form\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 24\n        }, this);\n\n      case 2:\n        return /*#__PURE__*/_jsxDEV(EventInfo, {\n          formProps: eventInfoForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 24\n        }, this);\n\n      case 3:\n        return /*#__PURE__*/_jsxDEV(Confirmation, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 24\n        }, this);\n\n      default:\n        return 'Unknown Step Content';\n    }\n  };\n\n  const handleNext = () => {\n    setActiveStep(prevState => prevState + 1);\n  };\n\n  const onSubmit = data => {\n    console.log(data);\n    handleNext();\n  };\n\n  let submitState = null;\n\n  if (activeStep === 0) {\n    submitState = userInfoForm.handleSubmit(onSubmit);\n  } else if (activeStep === 1) {\n    submitState = covid19Form.handleSubmit(onSubmit);\n  } else if (activeStep === 2) {\n    submitState = eventInfoForm.handleSubmit(onSubmit);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ContentContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      as: \"h1\",\n      textAlign: \"center\",\n      children: I18n.t(FORM_TITLE)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Stepper, {\n      children: steps.map(stepTitle => {\n        return /*#__PURE__*/_jsxDEV(Step, {\n          children: stepTitle\n        }, stepTitle, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      children: getStepContent(activeStep)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n      children: [/*#__PURE__*/_jsxDEV(PreviousButton, {\n        type: 'button',\n        onClick: () => setActiveStep(activeStep - 1),\n        visibility: activeStep === 0 ? 'hidden' : 'visible',\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this), activeStep !== steps.length - 1 && /*#__PURE__*/_jsxDEV(NextButton, {\n        onClick: submitState,\n        hidden: activeStep === steps.length - 1,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this), activeStep === steps.length - 1 && /*#__PURE__*/_jsxDEV(SubmitButton, {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 9\n  }, this);\n};\n\nexport default RegisterForm;","map":{"version":3,"sources":["/Users/nicenicegame/Desktop/nice-workspace/bcbk2020-frontend/src/modules/register/components/RegisterForm/index.tsx"],"names":["React","useState","styled","useForm","yup","yupResolver","useI18n","FORM_TITLE","Text","ContentContainer","UserInfo","EventInfo","Covid19","Confirmation","userInfoSchema","object","shape","firstName","string","required","lastName","nickname","phoneNumber","conDisease","allergicFood","email","covid19Schema","eventInfoSchema","Button","button","NextButton","PreviousButton","props","visibility","SubmitButton","Form","form","ButtonGroup","div","Stepper","Step","getSteps","RegisterForm","I18n","activeStep","setActiveStep","steps","userInfoForm","resolver","covid19Form","eventInfoForm","getStepContent","stepIndex","handleNext","prevState","onSubmit","data","console","log","submitState","handleSubmit","t","map","stepTitle","length"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport styled from 'styled-components';\nimport {useForm} from \"react-hook-form\";\nimport * as yup from 'yup';\nimport {yupResolver} from '@hookform/resolvers/yup'\n\nimport useI18n from 'core/i18n/hooks/useI18n'\n\nimport {FORM_TITLE} from './locales'\nimport Text from 'common/components/Text'\nimport ContentContainer from 'common/components/ContentContainer';\nimport UserInfo from \"../UserInfo\";\nimport EventInfo from \"../EventInfo\";\nimport Covid19 from \"../Covid19\";\nimport Confirmation from \"../Confirmation\";\nimport Col from \"../../../../common/components/Col\";\nimport FormControl from \"../../../../common/components/FormControl\";\nimport TextInput from \"../../../../common/components/TextInput\";\nimport Row from \"../../../../common/components/Row\";\n\ninterface UserInfoData {\n    firstName: string\n    lastName: string\n    nickname: string\n    conDisease: string\n    allergicFood: string\n    email: string,\n    phoneNumber: string\n}\n\n// type Covid19Data = {\n//\n// }\n//\n// type EventInfoData = {\n//\n// }\n\nconst userInfoSchema = yup.object().shape({\n    firstName: yup.string().required('This field is required'),\n    lastName: yup.string().required('This field is required'),\n    nickname: yup.string().required('This field is required'),\n    phoneNumber: yup.string().required('This field is required'),\n    conDisease: yup.string(),\n    allergicFood: yup.string(),\n    email: yup.string().email('Invalid email address').required('This field is required'),\n\n})\n\nconst covid19Schema = yup.object().shape({})\n\nconst eventInfoSchema = yup.object().shape({})\n\nconst Button = styled.button`\n    font: inherit;\n    border-radius: 3px;\n    padding: 0.5rem 1rem;\n    width: 10rem;\n    background: transparent;\n    border: 2px solid black;\n    cursor: pointer;\n    \n    \n    &:hover {\n        background: black;\n        color: white;\n    }\n    \n    @media only screen and (max-width: 768px) {\n        width: 6rem;\n        text-align: center;\n    }\n`;\n\nconst NextButton = styled(Button)`\n    background: pink;\n    float: right;\n    \n    &:hover {\n        background: hotpink;\n    }\n`;\n\nconst PreviousButton = styled(Button)`\n    visibility: ${props => props.visibility};\n`;\n\nconst SubmitButton = styled(Button)`\n    float: right;\n`;\n\nconst Form = styled.form`\n    width: 60vw;\n    border: 1px solid black;\n    padding: 1rem 2rem;\n    border-radius: 1rem;\n    \n    @media only screen and (max-width: 768px) {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n    }\n`;\n\nconst ButtonGroup = styled.div`\n    padding: 1rem 2rem;\n    \n    @media only screen and (max-width: 768px) {\n        display: flex;\n        justify-content: space-between;\n        padding: 1rem 1rem;\n    }\n`;\n\nconst Stepper = styled.div`\n    display: flex;\n    height: 3rem;\n    border: 1px solid black;\n    margin-top: 2rem;\n    justify-content: space-around;\n    align-items: center;\n    border-radius: 1rem 1rem;\n    \n    @media only screen and (max-width: 768px) {\n        font-size: 0.8rem;\n        height: 2rem;\n    }\n`;\n\nconst Step = styled.div`\n`;\n\nconst getSteps = () => {\n    return ['User Info', 'Covid-19', 'Event Info', 'Confirmation']\n};\n\nconst RegisterForm = () => {\n    const I18n = useI18n()\n\n    const [activeStep, setActiveStep] = useState(0);\n    const steps = getSteps();\n\n    // const { register, errors, handleSubmit } = useForm<UserInfoData>({\n    //     resolver: yupResolver(userInfoSchema)\n    // })\n\n    const userInfoForm = useForm<UserInfoData>({\n        resolver: yupResolver(userInfoSchema)\n    })\n    const covid19Form = useForm({\n        resolver: yupResolver(covid19Schema)\n    })\n    const eventInfoForm = useForm({\n        resolver: yupResolver(eventInfoSchema)\n    })\n\n    const getStepContent = (stepIndex: number) => {\n        switch (stepIndex) {\n            case 0:\n                return <UserInfo formProps={userInfoForm}/>;\n            case 1:\n                return <Covid19 formProps={covid19Form}/>;\n            case 2:\n                return <EventInfo formProps={eventInfoForm}/>;\n            case 3:\n                return <Confirmation/>;\n            default:\n                return 'Unknown Step Content';\n        }\n    };\n\n    const handleNext = () => {\n        setActiveStep(prevState => prevState + 1);\n    };\n\n    const onSubmit = (data: any) => {\n        console.log(data)\n        handleNext()\n    }\n\n    let submitState = null\n    if (activeStep === 0) {\n        submitState = userInfoForm.handleSubmit(onSubmit)\n    } else if (activeStep === 1) {\n        submitState = covid19Form.handleSubmit(onSubmit)\n    } else if (activeStep === 2) {\n        submitState = eventInfoForm.handleSubmit(onSubmit)\n    }\n\n    return (\n        <ContentContainer>\n            <Text as={\"h1\"} textAlign={\"center\"}>{I18n.t(FORM_TITLE)}</Text>\n            <Stepper>\n                {steps.map((stepTitle) => {\n                    return <Step key={stepTitle}>{stepTitle}</Step>\n                })}\n            </Stepper>\n            <Form>\n                {getStepContent(activeStep)}\n            </Form>\n            <ButtonGroup>\n                <PreviousButton\n                    type={'button'} onClick={() => setActiveStep(activeStep - 1)}\n                    visibility={activeStep === 0 ? 'hidden' : 'visible'}\n                >Back</PreviousButton>\n                {activeStep !== steps.length - 1 &&\n                <NextButton\n                    onClick={submitState}\n                    hidden={activeStep === steps.length - 1}\n                >Next</NextButton>\n                }\n                {activeStep === steps.length - 1 &&\n                <SubmitButton\n                >Register</SubmitButton>\n                }\n            </ButtonGroup>\n        </ContentContainer>\n    )\n}\n\nexport default RegisterForm\n"]},"metadata":{},"sourceType":"module"}